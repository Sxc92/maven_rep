<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.indigo.framework</groupId>
    <artifactId>indigo-framework</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <modules>
        <module>indigo-core</module>
        <module>indigo-cache</module>
    </modules>

    <properties>
        <revision>1.0.0</revision>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <flatten.maven.plugin.version>1.2.7</flatten.maven.plugin.version>
        <springboot.version>3.3.5</springboot.version>
        <springcloud.version>2023.0.4</springcloud.version>
        <springCloudAlibaba.version>2023.0.1.2</springCloudAlibaba.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${springcloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${springCloudAlibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>flatten-maven-plugin</artifactId>-->
<!--                <version>${flatten.maven.plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <updatePomFile>true</updatePomFile>-->
<!--                    <flattenMode>oss</flattenMode> &lt;!&ndash; 或者选择其他模式 &ndash;&gt;-->
<!--                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>flatten</id>-->
<!--                        <phase>process-resources</phase>-->
<!--                        <goals>-->
<!--                            <goal>flatten</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>flatten.clean</id>-->
<!--                        <phase>clean</phase>-->
<!--                        <goals>-->
<!--                            <goal>clean</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <!-- Source -->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <version>3.0.2</version>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <version>3.5.1</version>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-source-plugin</artifactId>-->
<!--                <version>3.0.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>jar</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-deploy-plugin</artifactId>-->
<!--                <version>2.8.2</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; 配置本地打包后的本地仓库存储地址，后续上传jar包会从此仓库中去取 &ndash;&gt;-->
<!--                    <altDeploymentRepository>-->
<!--                        internal.repo::default::file://${project.build.directory}/maven-repository-->
<!--                    </altDeploymentRepository>-->
<!--                </configuration>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>com.github.github</groupId>-->
<!--                <artifactId>site-maven-plugin</artifactId>-->
<!--                <version>0.12</version>-->
<!--                <configuration>-->
<!--                    <message>Maven artifacts for ${project.artifactId}-${project.version}</message>-->
<!--                    <noJekyll>true</noJekyll>-->
<!--                    &lt;!&ndash; 指定从哪里去取打好的包，并上传至github &ndash;&gt;-->
<!--                    <outputDirectory>${project.build.directory}/maven-repository</outputDirectory>-->
<!--                    &lt;!&ndash;-->
<!--                       指定要上传的分支, refs/heads 这个不变，后面的分支名可选，可以采取一个jar包使用一个分支的策略。-->
<!--                       若多个jar包同时发布在同一个分支的话，会覆盖。。。。-->
<!--                    &ndash;&gt;-->
<!--                    <branch>refs/heads/dependency</branch>-->
<!--                    &lt;!&ndash; 包含outputDirectory标签内填的文件夹中的所有内容 &ndash;&gt;-->
<!--                    <includes>-->
<!--                        <include>**/*</include>-->
<!--                    </includes>-->
<!--                    &lt;!&ndash; github远程存储outputDirectory标签内填的文件夹中的内容 &ndash;&gt;-->
<!--                    <repositoryName>maven_rep</repositoryName>-->
<!--                    &lt;!&ndash;-->
<!--                      github的用户名，注意不是登录的用户名，此项需要登录后，进入https://github.com/settings/profile页面配置Name属性，-->
<!--                      否则会报-->
<!--                      [ERROR] Failed to execute goal com.github.github:site-maven-plugin:0.12:site-->
<!--                      (default) on project rfcore: Error creating commit: Invalid request.-->
<!--                      [ERROR] For 'properties/name', nil is not a string.-->
<!--                      [ERROR] For 'properties/name', nil is not a string. (422)-->
<!--                      [ERROR] -> [Help 1]-->
<!--                      的错误-->
<!--                    &ndash;&gt;-->
<!--                    <repositoryOwner>christ</repositoryOwner>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>site</goal>-->
<!--                        </goals>-->
<!--                        <phase>deploy</phase>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
    <distributionManagement>
        <snapshotRepository>
            <id>github-snapshots</id>
            <url>file:D:/workspace/maven_rep/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>github-releases</id>
            <name>releases</name>
            <url>file:D:/workspace/maven_rep/releases</url>
        </repository>
    </distributionManagement>
</project>